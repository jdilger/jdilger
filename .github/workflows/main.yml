# This is a basic workflow to help you get started with Actions

name: make gee calendar

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
            python-version: '3.8' # Version range or exact version of a Python version to use, using SemVer's version range syntax
  
      - name: setup git username
        run: git config --global user.name "John Dilger"
        
      - name: setup git email
        run: git config --global user.email "johnjdilger@gmail.com"
      
      - name: auth ee git
        run: | 
            eval 'set +o history' 2>/dev/null || setopt HIST_IGNORE_SPACE 2>/dev/null
            touch ~/.gitcookies
            chmod 0600 ~/.gitcookies
            git config --global http.cookiefile ~/.gitcookies
            tr , \\t <<\__END__ >>~/.gitcookies
            earthengine.googlesource.com,FALSE,/,TRUE,2147483647,o,git-JohnJdilger.gmail.com=${{ secrets.GEE_GIT_KEY }}
            __END__
            eval 'set -o history' 2>/dev/null || unsetopt HIST_IGNORE_SPACE 2>/dev/null
            echo "multi line run works with Literal Block Scalar"
      
      - name: install requirements
        run: pip install -r requirements.txt
        
      # Runs a single command using the runners shell
      - name: get formatted gee git logs 
        run: python make_logs.py

      - name: make new page
        run: python make_graph.py
        
      - name: commit files
        run: |
          git add README.md
          git commit -m "update graph" 
                  
      - name: push
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
